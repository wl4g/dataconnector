# Copyright (c) 2017 ~ 2025, the original author James Wong individual Inc,
# All rights reserved. Contact us James Wrong James Wong<jamewong1376@gmail.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: "3"

networks:
  dataconnector_net:
    driver: bridge

services:
  zookeeper01:
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/bitnami_zookeeper:3.6.2 # docker.io/bitnami/zookeeper:3.6.2
    container_name: zookeeper01
    hostname: zookeeper01
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=12181
    restart: unless-stopped
    networks:
      - dataconnector_net
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      #- zookeeper01_data:/opt/bitnami/zookeeper/data:rw
    ports:
      - "12181:12181"

  zookeeper02:
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/bitnami_zookeeper:3.6.2 # docker.io/bitnami/zookeeper:3.6.2
    container_name: zookeeper02
    hostname: zookeeper02
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=22181
    restart: unless-stopped
    networks:
      - dataconnector_net
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      #- zookeeper02_data:/opt/bitnami/zookeeper/data:rw
    ports:
      - "22181:22181"

  kafka01: ## see:https://raw.githubusercontent.com/bitnami/containers/main/bitnami/kafka/docker-compose.yml
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/bitnami_kafka:2.6.0 # docker.io/bitnami/kafka:2.6.0
    container_name: kafka01
    hostname: kafka01
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka01:19092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:19092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper01:12181
      - JMX_PORT=9997
    restart: unless-stopped
    networks:
      - dataconnector_net
    depends_on:
      - zookeeper01
    ## see:https://hub.docker.com/r/bitnami/kafka/#Persisting_your_data
    #user: 1001:1000
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      #- kafka01_data:/bitnami/kafka/data:rw
    ports:
      - "19092:19092"

  kafka02: ## see:https://raw.githubusercontent.com/bitnami/containers/main/bitnami/kafka/docker-compose.yml
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/bitnami_kafka:2.6.0 # docker.io/bitnami/kafka:2.6.0
    container_name: kafka02
    hostname: kafka02
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka02:29092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper02:22181
      - JMX_PORT=9997
    restart: unless-stopped
    networks:
      - dataconnector_net
    depends_on:
      - zookeeper02
    ## see:https://hub.docker.com/r/bitnami/kafka/#Persisting_your_data
    #user: 1001:1000
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      #- kafka02_data:/bitnami/kafka/data:rw
    ports:
      - "29092:29092"

  ## see:https://github.com/provectus/kafka-ui/blob/v0.7.1/documentation/compose/kafka-ui.yaml
  kafka-ui:
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/provectuslabs_kafka-ui:v0.7.1 # docker.io/provectuslabs/kafka-ui:v0.7.1
    container_name: kafka-ui
    hostname: kafka-ui
    environment:
      - JAVA_OPTS=-Djava.net.preferIPv4Stack=true -Xmx1G
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=dev-kafka01
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka01:19092
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schema-registry01:18085
      - KAFKA_CLUSTERS_0_METRICS_PORT=9997
      - KAFKA_CLUSTERS_0_AUDIT_TOPIC_AUDIT_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPIC=__kui-audit-log
      - KAFKA_CLUSTERS_0_AUDIT_AUDIT_TOPIC_PROPERTIES_RETENTION_MS=43200000
      - KAFKA_CLUSTERS_0_AUDIT_AUDIT_TOPICS_PARTITIONS=3
      - KAFKA_CLUSTERS_0_AUDIT_LEVEL=ALTER_ONLY
      #- KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=first
      #- KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect0:8083
      - KAFKA_CLUSTERS_1_NAME=dev-kafka02
      - KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS=kafka02:29092
      - KAFKA_CLUSTERS_1_SCHEMAREGISTRY=http://schema-registry02:28085
      - KAFKA_CLUSTERS_1_METRICS_PORT=9997
      - KAFKA_CLUSTERS_1_AUDIT_TOPIC_AUDIT_ENABLED=true
      - KAFKA_CLUSTERS_1_AUDIT_TOPIC=__kui-audit-log
      - KAFKA_CLUSTERS_1_AUDIT_AUDIT_TOPIC_PROPERTIES_RETENTION_MS=43200000
      - KAFKA_CLUSTERS_1_AUDIT_AUDIT_TOPICS_PARTITIONS=3
      - KAFKA_CLUSTERS_1_AUDIT_LEVEL=ALTER_ONLY
    restart: unless-stopped
    networks:
      - dataconnector_net
    depends_on:
      - zookeeper01
      - zookeeper02
      - kafka01
      - kafka02
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "38080:8080"

  schema-registry01:
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/confluentinc_cp-schema-registry:7.2.1 # docker.io/confluentinc/cp-schema-registry:7.2.1
    container_name: schema-registry01
    hostname: schema-registry01
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka01:19092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schema-registry01
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18085
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    restart: unless-stopped
    networks:
      - dataconnector_net
    depends_on:
      - kafka01
    ports:
      - "18085:18085"

  schema-registry02:
    image: registry.cn-shenzhen.aliyuncs.com/wl4g-k8s/confluentinc_cp-schema-registry:7.2.1 # docker.io/confluentinc/cp-schema-registry:7.2.1
    container_name: schema-registry02
    hostname: schema-registry02
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka02:29092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schema-registry02
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:28085
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    restart: unless-stopped
    networks:
      - dataconnector_net
    depends_on:
      - kafka02
    ports:
      - "28085:28085"

#  data-connector:
#    image: docker.io/wl4g/data-connector:1.0.0
#    container_name: data-connector
#    hostname: data-connector
#    environment:
#      SERVER_PORT: 8000
#    restart: unless-stopped
#    networks:
#      - dataconnector_net
#    depends_on:
#      - zookeeper
#      - kafka
#    volumes:
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - "8000:8000"

volumes:
  zookeeper01_data:
    driver: local
  zookeeper02_data:
    driver: local
  kafka01_data:
    driver: local
  kafka02_data:
    driver: local
