# Copyright (c) 2017 ~ 2025, the original author James Wong individual Inc,
# All rights reserved. Contact us <jameswong1376@gmail.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# #### Environment Base configuration. ####
#

spring:
  application.name: kafka-subscriber
  main:
    allow-circular-references: true

server:
  port: 8000
  servlet:
    contextPath: /

management:
  server:
    address: 0.0.0.0
    port: 10108
    ssl:
      enabled: false
    servlet.contextPath: /
  security:
    enabled: false
    sensitive: true
  metrics:
    export:
      prometheus:
        enabled: true
      jmx:
        enabled: true
  endpoints:
    web:
      basePath: /actuator
      exposure:
        include: '*'

kafka-subscriber:
  definitions:
    bases:
      consumerProps: &baseConsumerProps
        request.timeout.ms: 30000
        auto.offset.reset: earliest
      processProps: &baseProcessProps
        sharedExecutorThreadPoolSize: 50
        sharedExecutorQueueSize: 500
        sequenceExecutorsMaxCountLimit: 100
        sequenceExecutorsPerQueueSize: 100
        executorWarmUp: true

    sources:
      - name: defaultStaticSourceProvider # Custom source provider Spring bean name
        staticConfigs:
          - name: kafka01
            topicPattern: "test-input"
            parallelism: 2
            matchToSubscriberUpdateDelayTime: 3s
            consumerProps:
              bootstrap.servers: ${IT_KAFKA_SERVERS:localhost:9092}
              group.id: "test_shared_source_101"
              <<: *baseConsumerProps
          - name: kafka02
            topicPattern: "test-input"
            parallelism: 2
            matchToSubscriberUpdateDelayTime: 3s
            consumerProps:
              bootstrap.servers: ${IT_KAFKA_SERVERS:localhost:9092}
              group.id: "shared_source_102"
              <<: *baseConsumerProps
      #- name: jdbcSourceProvider # The example custom JDBC source provider.
      #  jdbcUrl:
      #  username:
      #  password:
      #  sql:

    filters:
      - name: defaultSubscribeFilter # Custom subscriber filter Spring bean name
        topicPrefix: "test_shared_filtered_"
        topicPartitions: 10
        replicationFactor: 1
        processProps:
          <<: *baseProcessProps
        checkpoint:
          qoS: 3 # 0:AT_MOST_ONCE|1:RETRIES_AT_MOST|2:RETRIES_AT_MOST_STRICTLY|3:STRICTLY
          qoSMaxRetries: 5
          qoSMaxRetriesTimeout: 6h
          producerMaxCountLimit: 100
          producerProps:
            #bootstrap.servers: "localhost:9092" # By default: {.source.bootstrapServers}
            acks: "0"
            request.timeout.ms: 30000
            max.request.size: 1048576
            send.buffer.bytes: 131072
            retries: 5
            retry.backoff.ms: 6000
            compression.type: gzip
          defaultTopicProps:
            cleanup.policy: "delete"
            retention.ms: 86400000 # By default: 1day
            retention.bytes: 1073741824 # By default: 1G

    sinks:
      - name: defaultSubscribeSink # Custom subscriber sink Spring bean name
        groupIdPrefix: "test_isolation_sink_"
        parallelism: 2
        processProps:
          <<: *baseProcessProps
        consumerProps:
          bootstrap.servers: ${IT_KAFKA_SERVERS:localhost:9092}
          group.id: "test_shared_source_101"
          <<: *baseConsumerProps

    ## Notice: The following configuration method is usually used in experimental scenarios to
    ## define the subscriber list. When integrating into actual business applications, the interface
    ## 'com.wl4g.kafkasubscriber.facade.SubscribeFacade' should be customized to get subscribers info from the DB.
    subscribers:
      - id: s1001
        name: "subscriber_0"
        tenantId: "6382bb26e7e81a0047bee709"
        enable: true
        settings:
          isSequence: false
          logRetentionTime: 1d
          logRetentionSize: 1GB
          properties:
            defaultSubscribeFilter: '{"type":"RELATION","name":"testCondition1","fn":{"expression":"cts > 1690345000000 && __properties__.__online__.connected == true"}}'

  pipelines:
    - name: defaultPipeline
      enable: true # By default: true
      # Required (default: null)
      source: defaultStaticSourceProvider
      # Required (default: defaultSubscribeFilter)
      filter: defaultSubscribeFilter
      # Optional (default: defaultSubscribeSink)
      sink: defaultSubscribeSink
